<html class="pixel-ratio-2 retina watch-active-state">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, minimal-ui">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <link rel="apple-touch-icon" href="~/Content/mestekg.png" />
    <script type="text/javascript" src="https://maps.google.com/maps/api/js?v=3&key=AIzaSyCoMhrPfyUXUI0T6C28DFskxwOrAegtlYs&libraries=geometry"></script>
    <title>Shaker Golf</title>

    @Styles.Render("~/Content/css")

</head>
<body class="framework7-root">
    <div class="views tabs toolbar-through">

        <div id="view-1" class="view view-main tab active">
            <div class="navbar">
                <div class="navbar-inner navbar-on-center">
                    <div class="center sliding" id="distance">Shaker Golf</div>
                    <div class="right contact-edit-link">
                        <a href="#" class="icon-only" id="wor">
                            <i class="icon f7-icons">world</i>
                        </a>
                    </div>
                </div>
            </div>
            <div class="pages navbar-through toolbar-through">
                <div data-page="index-1" class="page">
                    <div class="page-content">
                        <div class="content-block-title"><img src="~/Content/page-start.png" /><br /><h1>@ViewBag.Title</h1></div>
                        <div class="content-block">
                            <div id="text">initializing</div>
                            <div id="map"></div>
                            @RenderBody()
                        </div>
                        <div class="content-block-title"><img src="~/Content/page-end.png" /></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="toolbar tabbar tabbar-labels">
            <div class="toolbar-inner">
                <a href="@Url.Action("Index","Home")" class="tab-link"><i class="icon f7-icons">home</i><span class="tabbar-label">Home</span></a>
                <a href="@Url.Action("Game","Home")" class="tab-link"> <i class="icon f7-icons">graph_round</i><span class="tabbar-label">Leader Board</span></a>
                <a href="@Url.Action("Create","Cards")" class="tab-link"><i class="icon f7-icons">photos</i><span class="tabbar-label">New Card</span></a>
                <a href="@Url.Action("Index","Cards")" class="tab-link"><i class="icon f7-icons">favorites</i><span class="tabbar-label">Manage</span></a>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>


    @Scripts.Render("~/bundles/jquery")

    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    <script type="text/javascript" src="~/Scripts/compass.js"></script>
    <script>
        var byId = function (id) {
            return document.getElementById(id);
        };
        var text = function (id, value) {
            byId(id).innerHTML = value;
        };
        var transform = function (id, commands) {
            var props = ['transform', 'webkitTransform', 'mozTransform',
                         'msTransform', 'oTransform'];
            var node = byId(id);
            for (var i = 0; i < props.length; i++) {
                if (typeof (node.style[props[i]]) != 'undefined') {
                    node.style[props[i]] = commands;
                    break;
                }
            }
        };
        var round = function (value) {
            return Math.round(value * 100) / 100;
        };

        Compass.noSupport(function () {
            text('text', 'no compass support');
        }).needGPS(function () {
            text('text', 'need GPS');
        }).needMove(function () {
            text('text', 'need move');
        }).init(function (method) {
            if (method == 'orientationAndGPS') {
                text('meta', 'GPS diff: ' + round(Compass._gpsDiff));
            }
        }).watch(function (heading) {
            text('text', round(heading));
            transform('compass', 'rotate(' + (-heading) + 'deg)');
        });
    </script>
    <script>
        //hole coordinates

        var too = "";
        var shaker_loc = {
            "1": ["42.086690", "-72.736543"],
            "2": ["42.084277", "-72.736487"],
            "3": ["42.086339", "-72.734774"],
            "4": ["42.089608", "-72.736739"],
            "5": ["42.089782", "-72.733589"],
            "6": ["42.090598", "-72.738246"],
            "7": ["42.087984", "-72.736262"],
            "8": ["42.089717", "-72.739313"],
            "9": ["42.088889", "-72.741128"],
            "10": ["42.086046", "-72.741703"],
            "11": ["42.086246", "-72.737244"],
            "12": ["42.084517", "-72.737273"],
            "13": ["42.085624", "-72.739970"],
            "14": ["42.085129", "-72.740026"],
            "15": ["42.086169", "-72.743163"],
            "16": ["42.083246", "-72.744825"],
            "17": ["42.086812", "-72.743432"],
            "18": ["42.088564", "-72.742586"]
        };

        $("#dis").click(function() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(getDistanceToLink);
            } else {
                x.innerHTML = "Geolocation is not supported by this browser.";
            }
        });
        $("#wor").click(function () {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showGlobalPosition);
            } else {
                x.innerHTML = "Geolocation is not supported by this browser.";
            }
        });
        //calculates distance between two points in km's
        function calcDistance(p1, p2) {
            return (google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(4);
        };

        function CenterControl(controlDiv, map) {

            // Set CSS for the control border.
            var controlUI = document.createElement('div');
            controlUI.className =
            controlUI.style.overflow = 'hidden';
            controlUI.style.position = 'absolute';
            controlUI.style.width = '25px';
            controlUI.style.height = '25px';
            controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
            controlUI.style.cursor = 'pointer';
            controlUI.style.margin = '10px 14px';
            controlUI.style.textAlign = 'center';
            controlUI.title = 'Click to recenter the map';
            controlDiv.appendChild(controlUI);

            // Set CSS for the control interior.
            var controlText = document.createElement('img');
            controlText.src = 'https://maps.gstatic.com/mapfiles/api-3/images/sv9.png'
            controlText.style.position = 'absolute';
            controlText.style.left = '-52px';
            controlText.style.top = '-86px';
            controlText.style.height = '175px';
            controlText.style.width = '164px';
            controlText.style.border = '0';
            controlText.style.padding = '0';
            controlText.style.margin = '0';
            controlUI.appendChild(controlText);

            // iOS toggle full screen
            controlUI.addEventListener('click', function () {
                if ($(".page-content").css("max-width") === "350px") {
                    $(".page-content").css({ "width": "100%", "height": "100%", "margin": "0", "max-width": "100%" });
                    $(".content-block").css({ "padding": "0" });
                    $("#map").css({ "width": "100%", "height": "100%", "top": "42px", "margin-left": "0", "position": "fixed" });
                    google.maps.event.trigger(map, 'resize');
                } else {
                    $(".page-content").css({ "max-width": "350px", "margin": "10px auto" });
                    $(".content-block").css({ "padding": "0 15px" });
                    $("#map").css({ "overflow": "initial !important", "z-index": "1", "position": "absolute", "height": "148px", "width": "302px", "top": "178px", "margin-left": "9px" });
                    google.maps.event.trigger(map, 'resize');
                }
            });

        };


        function showGlobalPosition(position) {
            //show map variable
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 18,
                mapTypeId: google.maps.MapTypeId.SATELLITE,
                mapTypeControl: false,
                fullscreenControl: false,
                streetViewControl: false,
                zoomControl: false,
            });

            //Resize the google marker
            var icon = {
                url: "/Content/map-pin.png", // url
                scaledSize: new google.maps.Size(2, 2), // scaled size
                origin: new google.maps.Point(0, 0), // origin
                anchor: new google.maps.Point(0, 0) // anchor
            };
            // Create the DIV to hold the control and call the CenterControl()
            // constructor passing in this DIV.
            var centerControlDiv = document.createElement('div');
            var centerControl = new CenterControl(centerControlDiv, map);
            centerControlDiv.index = 1;
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(centerControlDiv);


            var l = position.coords.latitude;
            var s = position.coords.longitude;
            var p1 = new google.maps.LatLng(l, s);

            map.setCenter(p1);


            $.getJSON("/coord-log.json", function (json1) {
                var bounds = new google.maps.LatLngBounds();
                    $.each(json1, function (key, data) {
                        var latLng = new google.maps.LatLng(data.lat, data.lng);
                        // Creating a marker and putting it on the map
                        bounds.extend(latLng);
                        var marker = new google.maps.Marker({

                            position: latLng,
                            title: data.lat,
                            icon: icon
                        });
                        marker.setMap(map);
                    });
                    map.fitBounds(bounds);
                });

            $("#distance").parent('div').css({ "background-color": "black", "color": "white" });
            $("#distance").css("color", "white");
            $("#distance").animate({ 'font-size': '10.1em', 'left': '0' }, 10);
            $("#distance").animate({ 'font-size': '1.7em' }, 400);
            $("#map").css({ "overflow": "initial !important", "z-index": "1", "position": "absolute", "height": "148px", "width": "302px", "top": "178px", "margin-left": "9px" });
            $('div[tabindex=0]').attr('id', 'compass');
        };

        function getDistanceToLink(position) {

            function DriveDistanceControl(distanceDiv, map) {


                // Set CSS for the control border.
                var controlUI = document.createElement('div');
                controlUI.style.backgroundColor = '#fff';
                controlUI.style.borderRadius = '3px';
                controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
                controlUI.style.cursor = 'pointer';
                controlUI.style.marginRight = '10px';
                controlUI.style.textAlign = 'center';
                controlUI.title = 'Click to get your drives distance';
                distanceDiv.appendChild(controlUI);

                // Set CSS for the control interior.
                var controlText = document.createElement('div');
                controlText.style.color = 'rgb(25,25,25)';
                controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
                controlText.style.marginTop = '10px';
                controlText.style.lineHeight = '27px';
                controlText.style.paddingLeft = '5px';
                controlText.style.paddingRight = '5px';
                controlText.innerHTML = 'Drive';
                controlUI.appendChild(controlText);

                //Show Drive Distance
                controlUI.addEventListener('click', function () {
                    var d = new Date();
                    var days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
                    var day = days[d.getDay()];
                    var hr = d.getHours();
                    var min = d.getMinutes();
                    var date = d.getDate();
                    var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
                    var month = months[d.getMonth()];
                    var year = d.getFullYear();
                    if (typeof markerT !== 'undefined' && typeof markerD !== 'undefined') {
                        $("#wor").parent('div').css({ "background-color": "black", "color": "white" });
                        $("#wor").css({ "color": "white", 'font-size': '.9em', 'left': '0' });
                        $("#wor").html((calcDistance(markerT.position, markerD.position) * 1093.61).toFixed(2) + " yds");

                        $.ajax({
                            url: '@Html.Raw(@Url.Action("Contact", "Home"))' + '?s=' + month + ' ' + date + ' ' + hr + ':' + min + ' Distance: '+(calcDistance(markerT.position, markerD.position) * 1093.61).toFixed(2),
                            data: null,
                            type: "post",
                            dataType: JSON,
                            contentType: "application/json; charset=utf-8",
                            cache: false
                        });
                    } else {
                        $("#wor").parent('div').css({ "background-color": "black", "color": "white" });
                        $("#wor").css({ "color": "white", 'font-size': '.9em', 'left': '0' });
                        $("#wor").html("Set Your Markers");
                    }
                });

            }
            var markerT, markerD;

            //show map variable
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 18,
                mapTypeId: google.maps.MapTypeId.SATELLITE,
                mapTypeControl: false,
                fullscreenControl: false,
                streetViewControl: false,
                zoomControl: false,
            });
            // Create the DIV to hold the control and call the CenterControl()
            // constructor passing in this DIV.
            var centerControlDiv = document.createElement('div');
            var centerControl = new CenterControl(centerControlDiv, map);
            centerControlDiv.index = 1;
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(centerControlDiv);

            // Create the DIV to hold the control and call the CenterControl()
            // constructor passing in this DIV.
            var distanceControlDiv = document.createElement('div');
            var distanceControl = new DriveDistanceControl(distanceControlDiv, map);
            distanceControlDiv.index = 1;
            map.controls[google.maps.ControlPosition.TOP_RIGHT].push(distanceControlDiv);

            if (document.querySelector('.front9') !== null) {
                var h1 = parseInt(document.getElementById("hole1").getElementsByTagName('div')[1].innerHTML.trim());
                var h2 = parseInt(document.getElementById("hole2").getElementsByTagName('div')[1].innerHTML.trim());
                var h3 = parseInt(document.getElementById("hole3").getElementsByTagName('div')[1].innerHTML.trim());
                var h4 = parseInt(document.getElementById("hole4").getElementsByTagName('div')[1].innerHTML.trim());
                var h5 = parseInt(document.getElementById("hole5").getElementsByTagName('div')[1].innerHTML.trim());
                var h6 = parseInt(document.getElementById("hole6").getElementsByTagName('div')[1].innerHTML.trim());
                var h7 = parseInt(document.getElementById("hole7").getElementsByTagName('div')[1].innerHTML.trim());
                var h8 = parseInt(document.getElementById("hole8").getElementsByTagName('div')[1].innerHTML.trim());
                var h9 = parseInt(document.getElementById("hole9").getElementsByTagName('div')[1].innerHTML.trim());


                //front9
                if (h1 === 0 && h2 === 0 & h3 === 0 && h4 === 0 && h5 === 0 && h6 === 0 && h7 === 0 && h8 === 0 && h9 === 0) {
                    var p2 = new google.maps.LatLng(shaker_loc["1"][0], shaker_loc["1"][1]);
                    var too = "1st hole";
                };

                if (h1 !== 0 && h2 === 0 & h3 === 0 && h4 === 0 && h5 === 0 && h6 === 0 && h7 === 0 && h8 === 0 && h9 === 0) {
                    var p2 = new google.maps.LatLng(shaker_loc["2"][0], shaker_loc["2"][1]);
                    var too = "2nd hole";
                };

                if (h1 !== 0 && h2 !== 0 & h3 === 0 && h4 === 0 && h5 === 0 && h6 === 0 && h7 === 0 && h8 === 0 && h9 === 0) {
                    var p2 = new google.maps.LatLng(shaker_loc["3"][0], shaker_loc["3"][1]);
                    var too = "3rd hole";
                }

                if (h1 !== 0 && h2 !== 0 & h3 !== 0 && h4 === 0 && h5 === 0 && h6 === 0 && h7 === 0 && h8 === 0 && h9 === 0) {
                    var p2 = new google.maps.LatLng(shaker_loc["4"][0], shaker_loc["4"][1]);
                    var too = "4th hole";
                };

                if (h1 !== 0 && h2 !== 0 & h3 !== 0 && h4 !== 0 && h5 === 0 && h6 === 0 && h7 === 0 && h8 === 0 && h9 === 0) {
                    var p2 = new google.maps.LatLng(shaker_loc["5"][0], shaker_loc["5"][1]);
                    var too = "5th hole";
                };

                if (h1 !== 0 && h2 !== 0 & h3 !== 0 && h4 !== 0 && h5 !== 0 && h6 === 0 && h7 === 0 && h8 === 0 && h9 === 0) {
                    var p2 = new google.maps.LatLng(shaker_loc["6"][0], shaker_loc["6"][1]);
                    var too = "6th hole";
                };

                if (h1 !== 0 && h2 !== 0 & h3 !== 0 && h4 !== 0 && h5 !== 0 && h6 !== 0 && h7 === 0 && h8 === 0 && h9 === 0) {
                    var p2 = new google.maps.LatLng(shaker_loc["7"][0], shaker_loc["7"][1]);
                    var too = "7th hole";
                };

                if (h1 !== 0 && h2 !== 0 & h3 !== 0 && h4 !== 0 && h5 !== 0 && h6 !== 0 && h7 !== 0 && h8 === 0 && h9 === 0) {
                    var p2 = new google.maps.LatLng(shaker_loc["8"][0], shaker_loc["8"][1]);
                    var too = "8th hole";
                };

                if (h1 !== 0 && h2 !== 0 & h3 !== 0 && h4 !== 0 && h5 !== 0 && h6 !== 0 && h7 !== 0 && h8 !== 0 && h9 === 0) {
                    var p2 = new google.maps.LatLng(shaker_loc["9"][0], shaker_loc["9"][1]);
                    var too = "9th hole";
                };
            }
            else
                if (document.querySelector('.back9') !== null) {
                    var h10 = parseInt(document.getElementById("hole10").getElementsByTagName('div')[1].innerHTML.trim());
                    var h11 = parseInt(document.getElementById("hole11").getElementsByTagName('div')[1].innerHTML.trim());
                    var h12 = parseInt(document.getElementById("hole12").getElementsByTagName('div')[1].innerHTML.trim());
                    var h13 = parseInt(document.getElementById("hole13").getElementsByTagName('div')[1].innerHTML.trim());
                    var h14 = parseInt(document.getElementById("hole14").getElementsByTagName('div')[1].innerHTML.trim());
                    var h15 = parseInt(document.getElementById("hole15").getElementsByTagName('div')[1].innerHTML.trim());
                    var h16 = parseInt(document.getElementById("hole16").getElementsByTagName('div')[1].innerHTML.trim());
                    var h17 = parseInt(document.getElementById("hole17").getElementsByTagName('div')[1].innerHTML.trim());
                    var h18 = parseInt(document.getElementById("hole18").getElementsByTagName('div')[1].innerHTML.trim());


                    //Back9
                    if (h10 === 0 && h11 === 0 & h12 === 0 && h13 === 0 && h14 === 0 && h15 === 0 && h16 === 0 && h17 === 0 && h18 === 0) {
                        var p2 = new google.maps.LatLng(shaker_loc["10"][0], shaker_loc["10"][1]);
                        var too = "10th hole";
                    };

                    if (h10 !== 0 && h11 === 0 & h12 === 0 && h13 === 0 && h14 === 0 && h15 === 0 && h16 === 0 && h17 === 0 && h18 === 0) {
                        var p2 = new google.maps.LatLng(shaker_loc["11"][0], shaker_loc["11"][1]);
                        var too = "11th hole";
                    };

                    if (h10 !== 0 && h11 !== 0 & h12 === 0 && h13 === 0 && h14 === 0 && h15 === 0 && h16 === 0 && h17 === 0 && h18 === 0) {
                        var p2 = new google.maps.LatLng(shaker_loc["12"][0], shaker_loc["12"][1]);
                        var too = "12th hole";
                    }

                    if (h10 !== 0 && h11 !== 0 & h12 !== 0 && h13 === 0 && h14 === 0 && h15 === 0 && h16 === 0 && h17 === 0 && h18 === 0) {
                        var p2 = new google.maps.LatLng(shaker_loc["13"][0], shaker_loc["13"][1]);
                        var too = "13th hole";
                    };

                    if (h10 !== 0 && h11 !== 0 & h12 !== 0 && h13 !== 0 && h14 === 0 && h15 === 0 && h16 === 0 && h17 === 0 && h18 === 0) {
                        var p2 = new google.maps.LatLng(shaker_loc["14"][0], shaker_loc["14"][1]);
                        var too = "14th hole";
                    };

                    if (h10 !== 0 && h11 !== 0 & h12 !== 0 && h13 !== 0 && h14 !== 0 && h15 === 0 && h16 === 0 && h17 === 0 && h18 === 0) {
                        var p2 = new google.maps.LatLng(shaker_loc["15"][0], shaker_loc["15"][1]);
                        var too = "15th hole";
                    };

                    if (h10 !== 0 && h11 !== 0 & h12 !== 0 && h13 !== 0 && h14 !== 0 && h15 !== 0 && h16 === 0 && h17 === 0 && h18 === 0) {
                        var p2 = new google.maps.LatLng(shaker_loc["16"][0], shaker_loc["16"][1]);
                        var too = "16th hole";
                    };

                    if (h10 !== 0 && h11 !== 0 & h12 !== 0 && h13 !== 0 && h14 !== 0 && h15 !== 0 && h16 !== 0 && h17 === 0 && h18 === 0) {
                        var p2 = new google.maps.LatLng(shaker_loc["17"][0], shaker_loc["17"][1]);
                        var too = "17th hole";
                    };

                    if (h10 !== 0 && h11 !== 0 & h12 !== 0 && h13 !== 0 && h14 !== 0 && h15 !== 0 && h16 !== 0 && h17 !== 0 && h18 === 0) {
                        var p2 = new google.maps.LatLng(shaker_loc["18"][0], shaker_loc["18"][1]);
                        var too = "18th hole";
                    };
                }
                else {
                    var p2 = new google.maps.LatLng(shaker_loc["1"][0], shaker_loc["1"][1]);
                    var too = "Shaker";
                };



            function onSuccess(position) {

                var l = position.coords.latitude;
                var s = position.coords.longitude;
                var p1 = new google.maps.LatLng(l, s);

                var marker2 = new google.maps.Marker({
                    position: new google.maps.LatLng(position.coords.latitude, position.coords.longitude),
                    icon: new google.maps.MarkerImage('/Content/map-pin-red.png'),
                    map: map
                });

                $("#distance").parent('div').css({ "background-color": "black", "color": "white" });
                $("#distance").css({ "color": "white", 'font-size': '1.3em', 'left': '0' });
                $("#distance").html((calcDistance(p1, p2) * 1093.61).toFixed(2) + " yd to " + too);

            }

            // onError Callback receives a PositionError object
            function onError(error) {
                alert('code: ' + error.code + '\n' +
                      'message: ' + error.message + '\n');
            }

            // Options: throw an error if no update is received every 30 seconds.
            navigator.geolocation.watchPosition(onSuccess, onError, { timeout: 30000, enableHighAccuracy: true });

            map.setCenter(p2);

            map.addListener('click', function (e) {
                placeMarker(e.latLng, map);
            });

            function placeMarker(position, map) {
                if (typeof markerT === 'undefined' && typeof markerD === 'undefined') {

                     markerT = new google.maps.Marker({
                        draggable: true,
                        position: position,
                        map: map
                    });
                    map.panTo(position);
                } else if (typeof markerT !== 'undefined' && typeof markerD === 'undefined') {

                     markerD = new google.maps.Marker({
                        draggable: true,
                        position: position,
                        map: map
                     });
                }
            }

            $("#map").css({ "overflow": "initial !important", "z-index": "1", "position": "absolute", "height": "148px", "width": "302px", "top": "178px", "margin-left": "9px" });
            $('div[tabindex=0]').attr('id', 'compass');
            // Creating a marker and positioning it on the map
            var marker = new google.maps.Marker({
                position: p2,
                icon: new google.maps.MarkerImage('/Content/flag2.png'),
                animation: google.maps.Animation.DROP,
                map: map
            });


            //log coords to debug bouncing yards
            var d = new Date();
            var days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
            var day = days[d.getDay()];
            var hr = d.getHours();
            var min = d.getMinutes();
            var date = d.getDate();
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            var month = months[d.getMonth()];
            var year = d.getFullYear();
            //var coordLog = "DateTime: " + day + " "+ month + " " + date + " " + hr + ":" + min + " ln: " + l.toFixed(6) + " lat: " + s.toFixed(6) + " dist: " + (calcDistance(p1, p2) * 1093.61).toFixed(2);
            //console.log("ln: " + l.toFixed(6) + " lat: " + s.toFixed(6));
            //var coordLog = ",{\"ln\":" + l.toFixed(6) + "," + "\"lat\":" + s.toFixed(6) + "}";

            @*$.ajax({
                url: '@Html.Raw(@Url.Action("Contact", "Home"))' + '?s=' + coordLog,
                data: null,
                type: "post",
                dataType: JSON,
                contentType: "application/json; charset=utf-8",
                cache: false
            });*@

        };
        //For iphone standalone app
        if (("standalone" in window.navigator) && window.navigator.standalone) {
            var noddy, remotes = false;
            document.addEventListener('click', function (event) {
                noddy = event.target;
                while (noddy.nodeName !== "A" && noddy.nodeName !== "HTML") {
                    noddy = noddy.parentNode;
                }
                if ('href' in noddy && noddy.href.indexOf('http') !== -1 && (noddy.href.indexOf(document.location.host) !== -1 || remotes)) {
                    event.preventDefault();
                    document.location.href = noddy.href;
                }
            }, false);
        }
    </script>
</body>
</html>